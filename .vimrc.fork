" Environment
    " Basics
        if !WINDOWS()
            set shell=/bin/bash
        endif

    " General
        if has('win32') || has('win64')
            if has("multi_byte")
                set fileencodings=ucs-bom,utf-8,big5
            endif
        endif
        if has('gui_running')
            if !exists("g:spf13_no_big_font")
                if OSX() && has("gui_running")
                    set guifont=Meslo\ LG\ M\ DZ\ Regular\ for\ Powerline:h14
                endif
            endif
        endif
        set fileformats=unix,mac,dos
        set viewoptions-=folds,options
        set noswapfile
        set nomore

    " Vim UI
        set nofoldenable                " Set to display all folds open
        if (filereadable(expand("~/.vim/bundle/vim-colors-solarized/colors/solarized.vim")))
            let g:solarized_termcolors=256
            let g:solarized_termtrans=1
            let g:solarized_contrast="normal"
            let g:solarized_visibility="normal"
            color solarized             " Load a colorscheme
        endif

        if has('statusline')
            set laststatus=2

            " Broken down into easily includeable segments
            set statusline=%<%f\                     " Filename
            set statusline+=%w%h%m%r                 " Options
            set statusline+=%{fugitive#statusline()} " Git Hotness
            set statusline+=\ [%{&ff}/%Y]            " Filetype
            set statusline+=\ [%{getcwd()}]          " Current dir
            set statusline+=%=%-14.(%l,%c%V%)\ %p%%  " Right aligned file nav info
        endif

    " Formatting
        set wrap&
        set pastetoggle=<Leader>p
        set foldmethod=marker

    " Plugins
        " PIV {
            if isdirectory(expand("~/.vim/bundle/PIV"))
                let g:DisableAutoPHPFolding = 1
            endif
        " }

        " SnipMate {
            let g:snips_author = 'Far Tseng <farrrr@gmail.com>'
        " }

        " YouCompleteMe
            if count(g:spf13_bundle_groups, 'youcompleteme')

                let g:ycm_min_num_of_chars_for_completion = 2
                let g:ycm_error_symbol = '!!'
                let g:ycm_warning_symbol = '>>'
                let g:ycm_collect_identifiers_from_tags_files = 1

                autocmd FileType php set omnifunc=phpcomplete#CompletePHP

                set completeopt+=preview
            endif

        " vim-airline {
            if isdirectory(expand("~/.vim/bundle/vim-airline/"))
                let g:airline#extensions#branch#enabled = 1
                let g:airline#extensions#tabline#enabled = 1
                let g:airline#extensions#tabline#tab_nr_type = 1
                let g:airline#extensions#bufferline#enabled = 0
                let g:airline#extensions#syntastic#enabled = 1
                let g:airline#extensions#whitespace#enabled = 1
                let g:airline#extensions#whitespace#checks = [ 'indent', 'trailing' ]
                let g:airline#extensions#tmuxline#enabled = 1
                let g:airline#extensions#capslock#enabled = 1
                let g:airline#extensions#tagbar#enabled = 1
            endif
        " }

        " Undotree {
            if isdirectory(expand("~/.vim/bundle/undotree/"))
                let g:undotree_WindowLayout = 2
            endif
        " }

        " Indent Line {
            if isdirectory(expand("~/.vim/bundle/indentLine/"))
                let g:indentLine_color_term = 237
                let g:indentLine_color_gui = '#A4E57E'
                let g:indentLine_char = '┊'
            endif
        " }

        " syntastic {
            if isdirectory(expand("~/.vim/bundle/syntastic/"))
                let g:syntastic_check_on_open = 1
                let g:syntastic_check_on_wq = 1
                let g:syntastic_aggregate_errors = 1
                let g:syntastic_auto_loc_list = 1
                let g:syntastic_loc_list_height=5
                let g:syntastic_error_symbol = '✗'
                let g:syntastic_warning_symbol = '⚠'
                let g:syntastic_javascript_checkers = ['jshint']
                let g:syntastic_php_checkers = ['php']
            endif
        " }

        " javascript-libraries-syntax {
            if isdirectory(expand("~/.vim/bundle/javascript-libraries-syntax.vim/"))
                let g:used_javascript_libs = 'underscore,backbone,jquery,requirejs,react'
            endif
        " }

        " vim-javascript-syntax {
            if isdirectory(expand("~/.vim/bundle/vim-javascript-syntax/"))
            "    au FileType javascript call JavaScriptFold()
            endif
        " }

        " vim-less {
            if isdirectory(expand("~/.vim/bundle/vim-less/"))
                nnoremap <Leader>m :w <BAR> !lessc % > %:t:r.css<CR><space>
            endif
        " }

        " vim-javascript {
            if isdirectory(expand("~/.vim/bundle/vim-javascript/"))
                let javascript_enable_domhtmlcss = 1
                let g:javascript_conceal = 0
            endif
        " }

        " vim-autoformat {
            if isdirectory(expand("~/.vim/bundle/vim-autoformat/"))
                noremap <Leader>af :Autoformat<CR><CR>
            endif
        " }



" }
